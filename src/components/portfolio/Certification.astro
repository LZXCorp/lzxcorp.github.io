---
import Heading from "../ui/Heading.astro";
import { Icon } from "astro-icon/components";

// badgelink and obtained are optional if NOT obtained yet
// expires is optional if not applicable
const CERTIFICATION = [
  {
    title: "Certified Penetration Testing Specialist",
    issuer: "HackTheBox",
    logo: "/images/logos/htb.svg",
    badgeicon: "/images/cert/cpts.webp",
    badgelink: "",
    obtained: "",
    accent: "rgb(169 67 251)",
    tags: [
      "Penetration Testing",
      "Network Security",
      "Web Attacks",
      "Active Directory",
    ],
  },
  {
    title: "Solutions Architect (Associate)",
    issuer: "Amazon Web Services (AWS)",
    logo: "/images/logos/aws.svg",
    badgeicon: "/images/cert/aws-saa.png",
    badgelink: "",
    obtained: "",
    accent: "rgb(53 54 237)",
    tags: [
      "AWS",
      "Cloud Computing",
      "Cloud Architecture",
      "Infrastructure Design",
    ],
  },
  {
    title: "Certified Ethical Hacker",
    issuer: "EC-Council",
    logo: "/images/logos/eccouncil.png",
    badgeicon: "/images/cert/ceh.png",
    badgelink: "",
    obtained: "12-2024",
    expires: "01-2026",
    accent: "rgb(237 6 2)",
    tags: ["Theoretical", "Ethical Hacking"],
  },
  {
    title: "Certified Cloud Practitioner",
    issuer: "Amazon Web Services (AWS)",
    logo: "/images/logos/aws.svg",
    badgeicon: "/images/cert/aws-clf.png",
    badgelink:
      "https://www.credly.com/badges/5f9788c9-7233-44c7-bcd2-c7b44dccd075/public_url",
    obtained: "10-2024",
    expires: "10-2027",
    accent: "rgb(255 153 0)",
    tags: ["AWS", "Cloud Computing"],
  },
];

const parseMonthYear = (s: string | undefined) => {
  if (!s) return null;
  const [m, y] = s.split("-") as [string, string];
  const month = Number(m);
  const year = Number(y);
  if (!Number.isFinite(month) || !Number.isFinite(year)) return null;
  // End of the given month at 23:59:59.999
  return new Date(year, month, 0, 23, 59, 59, 999);
};
const now = new Date();
const isExpired = (expires?: string) => {
  const d = parseMonthYear(expires);
  return d ? d.getTime() < now.getTime() : false;
};
---

<section class="py-8 px-8 max-md:py-4 mb-4 scroll-m-16" id="certifications">
  <div class="flex flex-col pt-8 max-w-6xl mx-auto">
    <div class="flex gap-3 items-center justify-center">
      <Icon class="text-3xl text-amber-400" name="award" />
      <Heading text="Technical" textGradient="Certifications" level={2} />
    </div>

    <div class="mt-10" aria-label="Professional certifications">
      <ul
        class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 items-stretch"
      >
        {
          CERTIFICATION.map((cert, index) => {
            const CardTag = cert.badgelink ? "a" : "div";
            const obtainedStr =
              typeof cert.obtained === "string" ? cert.obtained.trim() : "";
            const expiresStr =
              typeof cert.expires === "string" ? cert.expires.trim() : "";
            const expired = isExpired(expiresStr);
            const obtained = obtainedStr !== "";
            return (
              <li class="h-full">
                <article
                  role="article"
                  aria-labelledby={`cert-title-${index}`}
                  class="h-full"
                >
                  <CardTag
                    {...(cert.badgelink
                      ? {
                          href: cert.badgelink,
                          target: "_blank",
                          rel: "noopener noreferrer",
                          "aria-label": `Open ${cert.title} badge`,
                        }
                      : {})}
                    class="group relative h-full overflow-hidden rounded-2xl border border-white/10 bg-black/30 dark:bg-white/5 p-6 ring-1 ring-black/10 dark:ring-white/10 transition-all duration-300 hover:border-[var(--accent)]/50 hover:ring-[var(--accent)]/50 hover:shadow-[0_0_30px_-5px_var(--accent-blur)] flex flex-col"
                    style={`--accent: ${cert.accent || "rgb(56 189 248)"}; --accent-blur: color-mix(in srgb, var(--accent) 60%, transparent); --accent-light: color-mix(in srgb, var(--accent) 30%, transparent);`}
                  >
                    <span
                      aria-hidden="true"
                      class="pointer-events-none absolute inset-0 z-0 opacity-25"
                    >
                      <span class="absolute inset-0 bg-gradient-to-br from-[var(--accent-light)] via-transparent to-transparent" />
                      <span class="absolute inset-0 bg-gradient-to-tl from-[var(--accent-light)] via-transparent to-transparent opacity-40" />
                    </span>

                    <span
                      aria-hidden="true"
                      class="pointer-events-none absolute inset-0 z-0 animate-[spin_20s_linear_infinite] group-hover:animate-[spin_10s_linear_infinite]"
                    >
                      <span class="absolute -top-20 left-1/2 -translate-x-1/2 size-48 rounded-full bg-[radial-gradient(circle_at_center,_var(--accent),_transparent_60%)] opacity-25 blur-3xl group-hover:size-64 group-hover:opacity-70 transition-all duration-500" />

                      <span class="absolute top-1/2 -right-20 -translate-y-1/2 size-56 rounded-full bg-[radial-gradient(circle_at_center,_var(--accent),_transparent_60%)] opacity-28 blur-3xl group-hover:size-72 group-hover:opacity-75 transition-all duration-500" />

                      <span class="absolute -bottom-20 left-1/2 -translate-x-1/2 size-52 rounded-full bg-[radial-gradient(circle_at_center,_var(--accent),_transparent_60%)] opacity-22 blur-3xl group-hover:size-68 group-hover:opacity-65 transition-all duration-500" />

                      <span class="absolute top-1/2 -left-20 -translate-y-1/2 size-44 rounded-full bg-[radial-gradient(circle_at_center,_var(--accent),_transparent_60%)] opacity-24 blur-3xl group-hover:size-60 group-hover:opacity-68 transition-all duration-500" />
                    </span>

                    <span
                      aria-hidden="true"
                      class="pointer-events-none absolute inset-0 z-0 animate-[spin_15s_linear_infinite_reverse] group-hover:animate-[spin_8s_linear_infinite_reverse]"
                    >
                      <span class="absolute -top-16 -left-16 size-40 rounded-full bg-[radial-gradient(circle_at_center,_var(--accent-blur),_transparent_65%)] opacity-18 blur-3xl group-hover:size-56 group-hover:opacity-50 transition-all duration-500" />

                      <span class="absolute -top-16 -right-16 size-36 rounded-full bg-[radial-gradient(circle_at_center,_var(--accent-blur),_transparent_65%)] opacity-20 blur-3xl group-hover:size-52 group-hover:opacity-53 transition-all duration-500" />

                      <span class="absolute -bottom-16 -right-16 size-44 rounded-full bg-[radial-gradient(circle_at_center,_var(--accent-blur),_transparent_65%)] opacity-16 blur-3xl group-hover:size-60 group-hover:opacity-48 transition-all duration-500" />

                      <span class="absolute -bottom-16 -left-16 size-38 rounded-full bg-[radial-gradient(circle_at_center,_var(--accent-blur),_transparent_65%)] opacity-22 blur-3xl group-hover:size-54 group-hover:opacity-55 transition-all duration-500" />
                    </span>

                    {(!cert.obtained ||
                      (typeof cert.obtained === "string" &&
                        cert.obtained.trim() === "")) && (
                      <div class="pointer-events-none absolute inset-0 z-10">
                        <span
                          aria-hidden="true"
                          class="absolute -right-8 top-3 block h-6 w-28 rotate-45 bg-red-500/90 dark:bg-red-500/90 shadow-lg"
                        />
                        <span class="sr-only">In progress</span>
                      </div>
                    )}

                    <div class="relative flex items-start justify-between gap-4 flex-1">
                      <div class="flex min-w-0 flex-col">
                        <h3
                          id={`cert-title-${index}`}
                          class="text-base md:text-lg font-bold leading-snug"
                          style="color: var(--accent)"
                        >
                          {cert.title}
                        </h3>
                        <p class="text-xs font-medium text-zinc-700 dark:text-white/80">
                          {cert.issuer}
                        </p>
                      </div>

                      {cert.badgeicon && (
                        <div class="relative shrink-0">
                          <img
                            src={cert.badgeicon}
                            alt={`${cert.title} badge`}
                            class="h-24 w-24 md:h-28 md:w-28 lg:h-32 lg:w-32 object-contain opacity-95 transition-transform duration-200 group-hover:scale-105"
                            loading="lazy"
                            decoding="async"
                          />
                          {cert.logo && (
                            <img
                              src={cert.logo}
                              alt={`${cert.issuer} logo`}
                              class="absolute -bottom-1 -right-1 h-6 w-6 md:h-7 md:w-7 text-amber-50 object-contain drop-shadow-md"
                              loading="lazy"
                              decoding="async"
                            />
                          )}
                        </div>
                      )}
                    </div>

                    <div class="mt-3 flex flex-wrap gap-2">
                      {Array.isArray(cert.tags) &&
                        cert.tags.map((t) => (
                          <span
                            class="inline-flex items-center rounded-full border px-2 py-0.5 text-[0.7rem] font-medium leading-none transition-colors"
                            style="border-color: var(--accent); color: color-mix(in srgb, var(--accent) 85%, white); background: color-mix(in srgb, var(--accent) 12%, transparent);"
                          >
                            {t}
                          </span>
                        ))}
                    </div>

                    <div class="relative mt-6 flex items-center justify-between">
                      <div class="flex items-center gap-2">
                        {expired ? (
                          <span class="relative inline-flex items-center rounded-full border border-rose-400 text-rose-600 dark:text-rose-300 bg-rose-400/10 px-2.5 py-0.5 text-xs font-semibold tracking-wide ring-1 ring-rose-400/20 transition-colors group-hover:ring-rose-400/40 overflow-hidden">
                            <span
                              aria-hidden="true"
                              class="pointer-events-none absolute inset-0 -translate-x-[120%] bg-gradient-to-r from-transparent via-rose-300/40 to-transparent transition-transform duration-700 ease-out will-change-transform group-hover:translate-x-[120%]"
                            />
                            <span class="relative z-[1]">Expired</span>
                          </span>
                        ) : obtained ? (
                          <span class="relative inline-flex items-center rounded-full border border-emerald-400 text-emerald-600 dark:text-emerald-300 bg-emerald-400/10 px-2.5 py-0.5 text-xs font-semibold tracking-wide ring-1 ring-emerald-400/20 transition-colors group-hover:ring-emerald-400/40 overflow-hidden">
                            <span
                              aria-hidden="true"
                              class="pointer-events-none absolute inset-0 -translate-x-[120%] bg-gradient-to-r from-transparent via-emerald-300/40 to-transparent transition-transform duration-700 ease-out will-change-transform group-hover:translate-x-[120%]"
                            />
                            <span class="relative z-[1]">Completed</span>
                          </span>
                        ) : (
                          <span class="relative inline-flex items-center rounded-full border border-yellow-400 text-yellow-600 dark:text-yellow-300 bg-yellow-400/10 px-2.5 py-0.5 text-xs font-semibold tracking-wide ring-1 ring-yellow-400/20 transition-colors group-hover:ring-yellow-400/40 overflow-hidden">
                            <span
                              aria-hidden="true"
                              class="pointer-events-none absolute inset-0 -translate-x-[120%] bg-gradient-to-r from-transparent via-yellow-300/40 to-transparent transition-transform duration-700 ease-out will-change-transform group-hover:translate-x-[120%]"
                            />
                            <span class="relative z-[1]">In Progress</span>
                          </span>
                        )}
                        <div class="text-sm text-zinc-400 dark:text-white/70">
                          {expired && expiresStr ? (
                            <span>
                              <span class="sr-only">Expired: </span>
                              <time datetime={expiresStr}>{expiresStr}</time>
                            </span>
                          ) : obtained ? (
                            <span>
                              <span class="sr-only">Completed: </span>
                              <time datetime={obtainedStr}>{obtainedStr}</time>
                            </span>
                          ) : (
                            <time datetime="TBD">—</time>
                          )}
                        </div>
                      </div>
                      {cert.badgelink && (
                        <span
                          class="text-sm font-medium group-hover:underline"
                          style="color: var(--accent)"
                        >
                          View badge
                        </span>
                      )}
                    </div>
                  </CardTag>
                </article>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</section>
